{
	"info": {
		"_postman_id": "5c1c08c4-922b-421b-8fe8-82e46c5c91f3",
		"name": "nodejs-graphql-task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19208527"
	},
	"item": [
		{
			"name": "2.1 Get data",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n    user {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email\r\n    },\r\n    profile {\r\n        id,\r\n        avatar,\r\n        sex,\r\n        birthday,\r\n        country,\r\n        street,\r\n        city,\r\n        memberTypeId,\r\n        userId\r\n    },\r\n    post {\r\n        id,\r\n        userId,\r\n        title,\r\n        content\r\n    },\r\n    memberType {\r\n        id,\r\n        discount,\r\n        monthPostsLimit\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 Get data by ID",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query($memberTypeId: memberTypeEnum, $userID: ID, $profileId: ID, $postId: ID) {\r\n    user(id: $userID) {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email\r\n    }\r\n    memberType(id: $memberTypeId) {\r\n        id,\r\n        discount\r\n    },\r\n    profile(id: $profileId) {\r\n        id,\r\n        avatar,\r\n        sex,\r\n        birthday,\r\n        country,\r\n        street,\r\n        city,\r\n        memberTypeId,\r\n        userId\r\n    },\r\n    post(id: $postId) {\r\n        id,\r\n        userId,\r\n        title,\r\n        content\r\n    }\r\n}",
						"variables": "{\r\n    \"memberTypeId\": \"basic\",\r\n    \"userID\": \"264924a6-d732-411e-9e24-a2e4677a3601\",\r\n    \"profileId\": \"48a4cd9e-09ec-4225-82d4-e5bd97c75280\",\r\n    \"postId\": \"fe964fea-bc0a-4643-b76b-e6ba51374196\"\r\n}"
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3 Get users with data",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\r\n    userWithContent {\r\n        id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        profile {\r\n            id,\r\n            avatar,\r\n            sex,\r\n            birthday,\r\n            country,\r\n            street,\r\n            city,\r\n            memberTypeId,\r\n            userId\r\n        },\r\n        post {\r\n            id,\r\n            userId,\r\n            title,\r\n            content\r\n        },\r\n        memberType {\r\n            id,\r\n            discount,\r\n            monthPostsLimit\r\n        }\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.8 Create user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "\r\n    mutation ($user: userInput) {\r\n        createUser(user: $user) {\r\n            id,\r\n            firstName,\r\n            lastName,\r\n            email\r\n        }\r\n    }\r\n",
						"variables": "{\r\n    \"user\": {\r\n        \"firstName\": \"FirstOne 2\",\r\n        \"lastName\": \"LastOne 2\",\r\n        \"email\": \"testEail\"\r\n    }\r\n}"
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.9 Create profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "\r\n    mutation ($profile: profileInput) {\r\n        createProfile(profile: $profile) {\r\n            id,\r\n            avatar,\r\n            sex,\r\n            birthday,\r\n            country,\r\n            street,\r\n            city,\r\n            memberTypeId,\r\n            userId\r\n        }\r\n    }\r\n",
						"variables": "{\r\n    \"profile\": {\r\n        \"userId\": \"42a345c8-d234-43d1-b7bc-2515b1135c86\",\r\n        \"avatar\": \"Avatar\",\r\n        \"sex\": \"Sex\",\r\n        \"birthday\": \"Birthday\",\r\n        \"country\": \"Country\",\r\n        \"street\": \"Street\",\r\n        \"city\": \"City\",\r\n        \"memberTypeId\": \"business\"\r\n    }\r\n}"
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.10 Create post",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($post: postInput) {\r\n    createPost(post: $post) {\r\n        id,\r\n        userId,\r\n        title,\r\n        content\r\n    }\r\n}",
						"variables": "{\r\n    \"post\": {\r\n        \"userId\": \"7019478f-74b7-401e-a34b-59ce5d682340\",\r\n        \"title\": \"Post title\",\r\n        \"content\": \"Post content\"\r\n    }\r\n}"
					}
				},
				"url": {
					"raw": "http://127.0.0.1:3000/graphql",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}